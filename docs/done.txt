Контр тесты
a = 0 b = 1e-100 c = 1e100
x = -c / b. x = inf

a = 0 b = 1e100 c = 1e-100
x = -c / b. x = null


V1) header
V2) assert без отдельной функции

V4) // !Прочитать про макросы. Кернинган ритчи
V5) сделать bat, компилирующий и запускающий код [V]
V6) ifindef почитать [V]
V7) прочитать про static. <Переменная static видна только в файлах, в которых included>
<Переменная static внутри функций сохраняет свое значения после завершения функции. Протестил>
functionality, it usually exposes only a few "public" functions to users.
 The rest of its functions should be made static,
  so that the user won't be able to access them. 
  This is encapsulation, a good practice.
V8) Доюавить структруры для х1 х2
V9) сделать enum для констант



V12) сделать функцию для считывания данных в структуру
V13) посмотреть как ставить коментарции  в bat
V14) сделать сравнения с погнрешностью 1e-6


V20) промежуточная проверка чисел на inf, nan
V22) пофиксить сканф
при неуспешном считываении в потоке ввода остаются данные


V21) сделать тесты на макросах

10) привести к одному стилю
  ->snake<- - маленькие, нижнее подчеркивание
  camel -> pascal - большие буквы, нет пробелов

define всегда капсом
заменить счетные переменные на size_t

V10) ascii color codes. В тестинге Ответ правильный - зеленый. неправильный - красный
V1) составление тестов
V2) ренейминг под единый стиль
V3) добавить fprintf stderr
V4) выводы printf вынести в отдельную функцию

0) Закидывать exe в build в makefile
